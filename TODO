//not arranged

- 1: make fargiolas stuffs work on this repository.

- 2: use GstGLShader in the GLSL colorspace conversion.

- 3: add GLEW check in configure.ac

- 4: make the plugin (any pipeline) properly shutdown when Shader compilation failed
     (using "return GST_FLOW_UNEXPECTED")

- 5: make the plugin (any pipeline) properly shutdown when one of the "check requirements" failed.
     (for example when FBO extension is not available)
     For now it properly shutdown only when using the glimagesink

- 6: make an example named "filterxoverlay" similar to gtkxoverlay one. But use a more complex pipeline
     involving several glfilters. In order to test switching bettween gst states on it.

- 7: put the pipelines listed in tests/pipelines to an automated test that attempts to reach some states.

- 8: make two elements named "gltee" (attach as much texture (to its fbo) as tee src pads) and "glqueue".
     In order to have something like that:
     videotestsrc ! glupload ! glfilterA ! gltee name=t \
     t. ! glqueue ! glfilterB ! glimagesink \
     t. ! glqueue ! glfilterC ! glimagesink
     Assuming glfilterA is GPU consumming and so do not need to duplicate it.

- 9: rewrite the freeglut part that I minimized. Although I removed 90% of the orignal code,
     it should be rewrite with the GLib API. To have a better design and handle X/WIN32 with interfaces
     instead of having a lot of "define WIN32" scopes.
     And make it thread safe in order to have one glthread per GstGLDisplay, instead of having a global glthread.
     (the tests/examples/doublecube test shows the limitation of having only one (global) glthread).

- 10: make colorspace conversion through ColorMatrix when GLSL (and mesa YCbCr) is not available and when imaging extension
      is available.

- 11: make a test to estimate how much is a colorspace conversion. I mean compare an output frame
      to reference frame and estimate the differences. (usefull to compare several implementations)

- 12: write a cmake build or an other well known opensource and multiplatform builder.

- 13: test colorspace conversion with Apple YCbCr extension.

- 14: test the plugin on MAC.

- 15: test the plugin on WIN CE and some other embedded operating system.

